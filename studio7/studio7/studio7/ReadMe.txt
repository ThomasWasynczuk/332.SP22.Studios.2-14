Please list your group members here and answer all questions below.
Group members:

_________________________________________________________________________________________________________________________________
Author: Jon Shidal

CSE 332S - Debugging practice

This program plays a simple lottery game. A user inputs their chosen numbers on the command line (1-MAXNUMBER). The program then:
1. generates a list of winning numbers
2. sorts that list
3. uses binary search on the sorted list to determine how many user chosen numbers match the winning numbers
4. outputs the winning numbers and whether or not the user won(you win if more than half of the numbers you supply via the command line are winning numbers) 

Possible program return values:
Enums for theses can be found in lottery.h
0 - NOTAWINNER
1 - WINNER
2 - JACKPOT 
-1 - INCORRECTUSAGE

Program parameters and their default values:
Enum for these can be found in lottery.h
MAXNUMBER = 100   (numbers generated by the program will range from 1 - MAXNUMBER)
WINNINGNUMBERS = 10 (how many winning numbers will be generated)
USERNUMBERS = 5 (how many user supplied numbers the program expects, as command line arguments)

1. expects 6 arguments
2. 10 winning number are generated
3a. program does not complete
3b. drop breakpoints at any function defined by supplied code (if nested, breakpoint at start of loop)
	breaks at insertion sort!
	it looks like we never increment i in insetrion sort, trying that now...
	that worked, and "winningNumbers" are sorted after call
4. crash at line 38, function binarySearch is to blame
	looks like middleIndex @ algorithms.33 is miscalculated, dividing by 2 and retrying...
5. matches is ++ every time meannig that binary search is true every time
	(middle_value = value) always true, changing to ==
	that worked
6. simply change WINNINGNUMBERS VALUE IN algs.h

::
H:\Current 332\Studio7\studio7\studio7\Debug>studio7.exe
This program compares 5 numbers (from 1-100) taken as input and compares them with 20 randomly generated winning numbers
Usage: studio7.exe <(1-100)> <(1-100)> <(1-100)> <(1-100)> <(1-100)>

H:\Current 332\Studio7\studio7\studio7\Debug>studio7.exe 55 44 32 33 30
Winning numbers: 4 12 16 18 20 24 35 49 53 60 60 63 78 78 80 82 85 88 90 96
Your numbers: 55 44 32 33 30
Sorry, you only matched 0 numbers. Better luck next time!

H:\Current 332\Studio7\studio7\studio7\Debug>studio7.exe 55 44 32 33 30
Winning numbers: 4 10 11 16 19 30 30 31 33 34 37 50 54 55 78 85 92 94 95 95
Your numbers: 55 44 32 33 30
Congratulations, you won! You matched 3 numbers.